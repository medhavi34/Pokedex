# -*- coding: utf-8 -*-
"""Backend

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NSiGPSaaTf6jGGNQ8RNh0oGech2vGydF
"""

# !pip install flask-ngrok
# !pip install "torch==1.4" "torchvision==0.5.0"

from google.colab import files
files.upload()
!unzip Pokedex.zip

from flask_ngrok import run_with_ngrok
from flask import Flask, jsonify, request, render_template, send_from_directory
from werkzeug.utils import secure_filename
from fastai.vision import *
import os

model = load_learner(Path('/content/'), 'learner_pokemon.pkl')
classes = model.data.classes
df = pd.read_csv('/content/pokemon.csv' )
os.makedirs('images', exist_ok = True)
# !mv images static
UPLOAD_FOLDER = 'static/images'

def find_the_pokemon(pokemon_loc):
  img = open_image(pokemon_loc)
  _,idx,_ = model.predict(img)
  return classes[idx]

app = Flask(__name__,template_folder='/content/templates')
run_with_ngrok(app)   #starts ngrok when the app is running 

@app.route('/',methods = ['POST','GET'])
def pokemon_prediction():
    if "predict" in request.form:
        uploaded_img = request.files['inpFile'] #we have to put the name of the form
        if uploaded_img != '':
          img_pth = os.path.join(UPLOAD_FOLDER, secure_filename(uploaded_img.filename))
          uploaded_img.save(img_pth)
          pokemon = find_the_pokemon(img_pth)
          pokemon_info = df[df[' Name']==pokemon].values[0]
          return render_template('predict.html',pokemon=pokemon.upper(), image_name = img_pth, h= pokemon_info[5], w = pokemon_info[6], m = pokemon_info[7], f = pokemon_info[8],
                                 hp = pokemon_info[13],a = pokemon_info[14],d = pokemon_info[15],spl = pokemon_info[16],s = pokemon_info[17],)

    return render_template('index.html')
	
if __name__ == '__main__':
   app.run()

import pandas as pd



